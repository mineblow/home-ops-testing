---
- name: Check if hardened-admin exists
  ansible.builtin.getent:
    database: passwd
    key: hardened-admin
  register: hardened_user_check
  ignore_errors: true

- name: Generate random password for hardened-admin
  set_fact:
    hardened_password: "{{ lookup('password', '/dev/null length=24 chars=ascii_letters,digits') }}"
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Hash password for hardened-admin
  set_fact:
    hardened_password_hashed: "{{ hardened_password | password_hash('sha512') }}"
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Create hardened-admin user
  user:
    name: hardened-admin
    password: "{{ hardened_password_hashed }}"
    shell: /bin/bash
    groups: sudo
    create_home: yes
    state: present
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Create .ssh directory for hardened-admin
  file:
    path: /home/hardened-admin/.ssh
    state: directory
    mode: '0700'
    owner: hardened-admin
    group: hardened-admin
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Fetch SSH public key from Vault
  command: >
    vault kv get -field=value kv/home-ops/environment/homelab/{{ env_name }}/secrets/vm_ssh_key_public
  register: pubkey
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  changed_when: false
  no_log: true
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Install authorized_keys for hardened-admin
  copy:
    content: "{{ pubkey.stdout }}"
    dest: /home/hardened-admin/.ssh/authorized_keys
    owner: hardened-admin
    group: hardened-admin
    mode: '0600'
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Grant hardened-admin NOPASSWD sudo
  copy:
    dest: /etc/sudoers.d/hardened-admin
    content: "hardened-admin ALL=(ALL) NOPASSWD:ALL\n"
    mode: '0440'
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Push hardened-admin credentials to Vault
  command: >
    vault kv put kv/home-ops/environment/homelab/{{ env_name }}/secrets/hardened_ssh_creds
    username="hardened-admin" password="{{ hardened_password }}"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  no_log: true
  when: hardened_user_check.failed or hardened_user_check is skipped

- name: Delete original bootstrap user
  user:
    name: "{{ bootstrap_user }}"
    state: absent
    remove: yes
