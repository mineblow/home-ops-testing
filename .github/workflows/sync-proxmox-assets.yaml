name: Sync Proxmox Cloud-Init & Templates

on:
  push:
    paths:
      - '.cloud-init/**'
      - '.scripts/sync-templates.sh'
  workflow_dispatch:

env:
  VAULT_SECRET_PATH: "home-ops/proxmox"
  REMOTE_CLOUDINIT_DIR: "/var/lib/vz/snippets"
  SSH_KEY_PATH: "~/.ssh/id_ed25519"

jobs:
  sync-assets:
    name: 🔄 Sync Cloud-Init & Trigger Rebuild
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: 🦦 Checkout repo
        uses: actions/checkout@v3

      - name: 🔐 Auth to GCP & Fetch Vault Bootstrap
        run: |
          set -euo pipefail
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}" > gcp-creds.json
          gcloud auth activate-service-account --key-file=gcp-creds.json

          RAW=$(gcloud secrets versions access latest --secret=vault_bootstrap)
          export VAULT_ADDR=$(echo "$RAW" | jq -r .vault_addr)
          export VAULT_ROLE=$(echo "$RAW" | jq -r .vault_role)
          export CLIENT_ID=$(echo "$RAW" | jq -r .oauth_client_id)
          export CLIENT_SECRET=$(echo "$RAW" | jq -r .oauth_client_secret)

          echo "::add-mask::$VAULT_ADDR"
          echo "::add-mask::$CLIENT_ID"
          echo "::add-mask::$CLIENT_SECRET"

          echo "VAULT_ADDR=$VAULT_ADDR" >> "$GITHUB_ENV"
          echo "VAULT_ROLE=$VAULT_ROLE" >> "$GITHUB_ENV"
          echo "TAILSCALE_CLIENT_ID=$CLIENT_ID" >> "$GITHUB_ENV"
          echo "TAILSCALE_CLIENT_SECRET=$CLIENT_SECRET" >> "$GITHUB_ENV"

      - name: 🌐 Start Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ env.TAILSCALE_CLIENT_ID }}
          oauth-secret: ${{ env.TAILSCALE_CLIENT_SECRET }}
          hostname: cloudinit-sync
          tags: tag:github-ci

      - name: 🔓 Authenticate to Vault via GitHub OIDC
        run: |
          set -euo pipefail
          JWT=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value)

          VAULT_TOKEN=$(curl -s --request POST \
            --data "{\"jwt\":\"$JWT\",\"role\":\"${VAULT_ROLE}\"}" \
            "$VAULT_ADDR/v1/auth/jwt/login" | jq -r .auth.client_token)

          echo "::add-mask::$VAULT_TOKEN"
          echo "VAULT_TOKEN=$VAULT_TOKEN" >> "$GITHUB_ENV"

      - name: 🧠 Fetch Proxmox Secrets from Vault
        run: |
          set -euo pipefail
          vault_headers="-H X-Vault-Token:$VAULT_TOKEN"
          vault_base="$VAULT_ADDR/v1/secret/data/$VAULT_SECRET_PATH"

          fetch_secret() {
            curl -s $vault_headers "$vault_base" | jq -r ".data.data[\"$1\"]"
          }

          echo "PROXMOX_HOST=$(fetch_secret 'api url')" >> "$GITHUB_ENV"
          echo "PROXMOX_USER=auto" >> "$GITHUB_ENV"

          echo "📦 Fetching SSH key..."
          fetch_secret 'automation ssh key' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          mkdir -p ~/.ssh
          ssh-keyscan -H "$PROXMOX_HOST" >> ~/.ssh/known_hosts

      - name: ✅ Lint & Validate cloud-init YAML
        run: |
          set -euo pipefail
          sudo apt-get update && sudo apt-get install -y yamllint cloud-init
          yamllint --strict .cloud-init/

          for file in .cloud-init/*.yaml; do
            cloud-init devel schema --config-file "$file"
          done

      - name: 🔍 Detect files that need syncing
        id: hashcheck
        run: |
          set -euo pipefail
          mkdir -p .cloud-init-uploaded
          echo "files_to_upload=false" >> "$GITHUB_OUTPUT"

          count=0
          for file in .cloud-init/*.yaml; do
            local_hash=$(sha256sum "$file" | awk '{print $1}')
            remote_hash=$(ssh -i $SSH_KEY_PATH $PROXMOX_USER@$PROXMOX_HOST \
              "sha256sum $REMOTE_CLOUDINIT_DIR/$(basename $file) 2>/dev/null || echo missing" | awk '{print $1}')

            if [[ "$local_hash" != "$remote_hash" ]]; then
              echo "$file" >> .cloud-init-uploaded/list.txt
              ((count++))
            fi
          done

          [[ $count -gt 0 ]] && echo "files_to_upload=true" >> "$GITHUB_OUTPUT"

      - name: 📤 Upload changed files
        if: steps.hashcheck.outputs.files_to_upload == 'true'
        run: |
          set -euo pipefail
          count=0
          while read -r file; do
            echo "📄 Uploading $(basename "$file")"
            attempt=1
            until scp -i ConnectTimeout=15 $SSH_KEY_PATH "$file" $PROXMOX_USER@$PROXMOX_HOST:$REMOTE_CLOUDINIT_DIR; do
              delay=$((attempt * 5))
              echo "❌ Attempt $attempt failed. Retrying in $delay sec..."
              ((attempt++))
              [[ $attempt -gt 5 ]] && echo "🚨 Max retries reached." && exit 1
              sleep $delay
            done
            ((count++))
          done < .cloud-init-uploaded/list.txt
          echo "✅ Uploaded $count files"

      - name: 📝 Add summary to GitHub Actions UI
        if: success()
        run: |
          {
            echo "## ☁️ Cloud-init Sync Summary"
            echo
            if [[ -f .cloud-init-uploaded/list.txt ]]; then
              echo "**Uploaded files:**"
              sed 's/^/- `/' .cloud-init-uploaded/list.txt | sed 's/$/`/' || true
            else
              echo "✅ No files needed upload"
            fi
          } >> $GITHUB_STEP_SUMMARY

      - name: 🚀 Trigger template rebuild workflow (if script changed)
        if: contains(github.event.head_commit.modified, '.scripts/sync-templates.sh')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🎯 .scripts/sync-templates.sh changed, triggering rebuild workflow via dispatch..."
          curl -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "trigger-template-rebuild"}'

      - name: 🧹 Cleanup secrets and SSH
        if: always()
        run: |
          set -euo pipefail
          shred -u ~/.ssh/id_ed25519 || true
          rm -f gcp-creds.json || true
          rm -rf .cloud-init-uploaded || true

      - name: 🔒 Revoke Vault Token
        if: always()
        run: |
          [[ -n "${VAULT_TOKEN:-}" ]] && \
          curl -s -X POST -H "X-Vault-Token: $VAULT_TOKEN" "$VAULT_ADDR/v1/auth/token/revoke-self" || true

      - name: 🏏 Comment on PR (if exists)
        if: github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          if [[ -f .cloud-init-uploaded/list.txt ]]; then
            FILES=$(cat .cloud-init-uploaded/list.txt | sed 's/^/- `/;s/$/`/' | paste -sd '\n' -)
            gh pr comment "$PR_NUMBER" --body "🚀 Cloud-init sync complete. Files uploaded:\n$FILES"
          else
            gh pr comment "$PR_NUMBER" --body "🔰 No cloud-init changes to sync."
